---
- name: Setup user
  block:
  - name: Check variables
    ansible.builtin.assert:
      that:
        - username is defined
        - homedir is defined
        - git_name is defined
        - git_email is defined

  - name: Install ZSH
    ansible.builtin.apt:
      name:
        - zsh
        - fonts-powerline
        - tmux
      state: latest   # noqa package-latest
      cache_valid_time: 3600

  - name: Create / update user
    ansible.builtin.user:
      name: "{{ username }}"
      shell: /bin/zsh
      comment: "{{ username }}"
      uid: 1000
      group: "{{ username }}"
      append: true
      groups:
        - adm
        - cdrom
        - sudo
        - dip
        - plugdev

  - name: Create user SSH directory
    ansible.builtin.file:
      path: "{{ homedir }}/.ssh"
      state: directory
      mode: 0700
      group: "{{ username }}"
      owner: "{{ username }}"

  - name: Create SSH key
    remote_user: "{{ username }}"
    community.crypto.openssh_keypair:
      regenerate: never
      path: "{{ homedir }}/.ssh/id_ed25519"
      owner: "{{ username }}"
      type: ed25519

  - name: Create home local dir
    ansible.builtin.file:
      path: "{{ homedir }}/{{ item }}"
      owner: "{{ username }}"
      group: "{{ username }}"
      mode: 0755
      state: directory
    with_items: ["local", "local/bin", "local/src", "devel"]

    # Run the next block of commands as the user
  - name: Run set of commands as the user
    become: true
    become_user: "{{ username }}"
    block:
      - name: Set git name
        community.general.git_config:
          scope: global
          name: user.name
          value: "{{ git_name }}"

      - name: Set git email
        community.general.git_config:
          scope: global
          name: user.email
          value: "{{ git_email }}"

      - name: Set git editor
        community.general.git_config:
          scope: global
          name: core.editor
          value: "vim"

      - name: Check oh-my-zsh existence
        ansible.builtin.stat:
          path: "{{ homedir }}/.oh-my-zsh"
        register: omz_stat

      - name: Run commands when ZSH not installed yet
        when: not omz_stat.stat.exists
        block:
          - name: Get oh-my-zsh
            ansible.builtin.get_url:
              url: "https://raw.github.com/ohmyzsh/ohmyzsh/master/\
                   tools/install.sh"
              dest: /tmp/oh-my-zsh.sh
              mode: '0700'
            register: omz_dl

          - name: Install oh-my-zsh   # noqa no-changed-when
            ansible.builtin.command: /bin/sh /tmp/oh-my-zsh.sh
            when: omz_dl.status_code == 200

          - name: Remove OMZ installer
            ansible.builtin.file:
              path: /tmp/oh-my-zsh.sh
              state: absent
            when: omz_dl.status_code == 200

      - name: Change to agnoster
        ansible.builtin.lineinfile:
          path: "{{ homedir }}/.zshrc"
          regexp: '^ZSH_THEME'
          line: ZSH_THEME="agnoster"

      - name: Update path in zshrc
        ansible.builtin.lineinfile:
          path: "{{ homedir }}/.zshrc"
          line: "export PATH=\"$HOME/local/bin:$HOME/.local/bin:$PATH\""
          state: present

      - name: Turn off case sensitive tab completion
        ansible.builtin.lineinfile:
          path: "{{ homedir }}/.zshrc"
          regexp: 'CASE_SENSITIVE='
          line: 'CASE_SENSITIVE="true"'
